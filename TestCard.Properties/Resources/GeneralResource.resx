<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccreditationDate" xml:space="preserve">
    <value>Accreditation date</value>
  </data>
  <data name="AccreditationNumber" xml:space="preserve">
    <value>Accreditation number</value>
  </data>
  <data name="AccreditationScope" xml:space="preserve">
    <value>Accreditation scope</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="BreakHours" xml:space="preserve">
    <value>Break hours</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="ContactInformation" xml:space="preserve">
    <value>Contact information</value>
  </data>
  <data name="DataSaved" xml:space="preserve">
    <value>Data saved</value>
  </data>
  <data name="Day" xml:space="preserve">
    <value>Day</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditRequest" xml:space="preserve">
    <value>Edit request</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailNotValid" xml:space="preserve">
    <value>Not valid email address</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="ErrorOccured" xml:space="preserve">
    <value>Error occured, please reload the page</value>
  </data>
  <data name="FillRequiredField" xml:space="preserve">
    <value>Fill required field</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="IdentificationNumber" xml:space="preserve">
    <value>Identification number</value>
  </data>
  <data name="IdNumber" xml:space="preserve">
    <value>Id number</value>
  </data>
  <data name="IdNumberMaxLengthError" xml:space="preserve">
    <value>IdNumberMaxLengthError</value>
  </data>
  <data name="ImageAllowedMessage" xml:space="preserve">
    <value>Only .jpeg images are allowed</value>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PasswordNotValid" xml:space="preserve">
    <value>Identification or password is not valid</value>
  </data>
  <data name="PasswordsMustMatch" xml:space="preserve">
    <value>Passwords must match</value>
  </data>
  <data name="RecoverPassword" xml:space="preserve">
    <value>Recover password</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegistrationComplete" xml:space="preserve">
    <value>Registration complete</value>
  </data>
  <data name="RegistrationRequest" xml:space="preserve">
    <value>Registration request</value>
  </data>
  <data name="RepeatPassword" xml:space="preserve">
    <value>Repeat password</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Required field</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="StringLengthErrorMessage" xml:space="preserve">
    <value>Allowe string length is {1}</value>
  </data>
  <data name="Tel" xml:space="preserve">
    <value>Tel</value>
  </data>
  <data name="Telephone" xml:space="preserve">
    <value>Telephone</value>
  </data>
  <data name="TestCard" xml:space="preserve">
    <value>Test card</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="WorkHours" xml:space="preserve">
    <value>Work hours</value>
  </data>
  <data name="YourEmail" xml:space="preserve">
    <value>Your email</value>
  </data>
  <data name="RecordNotExists" xml:space="preserve">
    <value>Record doesn't exist</value>
  </data>
  <data name="CompanyLogo" xml:space="preserve">
    <value>Company logo</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="WorkSchedule" xml:space="preserve">
    <value>Work schedule</value>
  </data>
  <data name="Approve" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="Reject" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="RequestAlreadyProcessed" xml:space="preserve">
    <value>Request is already processed</value>
  </data>
  <data name="RequestApproved" xml:space="preserve">
    <value>Request is approved</value>
  </data>
  <data name="RequestNotApprovedByQualityManager" xml:space="preserve">
    <value>Request is not approved by quality manager</value>
  </data>
  <data name="RequestRejected" xml:space="preserve">
    <value>Request is rejected</value>
  </data>
  <data name="CompanyUsers" xml:space="preserve">
    <value>Company users</value>
  </data>
  <data name="CardNumber" xml:space="preserve">
    <value>Card Number</value>
  </data>
  <data name="CarModel" xml:space="preserve">
    <value>Car Model</value>
  </data>
  <data name="CarNumber" xml:space="preserve">
    <value>Car Number</value>
  </data>
  <data name="CarSerialNo" xml:space="preserve">
    <value>Car Serial No</value>
  </data>
  <data name="EffectiveDate" xml:space="preserve">
    <value>Effective Date</value>
  </data>
  <data name="OwnerName" xml:space="preserve">
    <value>Owner Name</value>
  </data>
  <data name="RespFullName" xml:space="preserve">
    <value>Resp. Full Name</value>
  </data>
  <data name="Valid" xml:space="preserve">
    <value>Valid</value>
  </data>
  <data name="VINCode" xml:space="preserve">
    <value>VIN Code</value>
  </data>
  <data name="NotValid" xml:space="preserve">
    <value>Not Valid</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="Odometer" xml:space="preserve">
    <value>Odometer</value>
  </data>
  <data name="OwnerIDNo" xml:space="preserve">
    <value>Owner IDNo</value>
  </data>
  <data name="AdministratorConfirm" xml:space="preserve">
    <value>Admin. confirm</value>
  </data>
  <data name="CreateDate" xml:space="preserve">
    <value>Create date</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="QualityManagerConfirm" xml:space="preserve">
    <value>Qualirt man. confirm</value>
  </data>
  <data name="RequestDate" xml:space="preserve">
    <value>Request date</value>
  </data>
  <data name="RequestUser" xml:space="preserve">
    <value>Request user</value>
  </data>
  <data name="UserChangeRequests" xml:space="preserve">
    <value>User change requests</value>
  </data>
  <data name="UserHasUnconfirmedRequest" xml:space="preserve">
    <value>Can not save, user has unconfirmed request</value>
  </data>
  <data name="WorkScheduleChangeRequests" xml:space="preserve">
    <value>Work schedule change requests</value>
  </data>
  <data name="InvalidDate" xml:space="preserve">
    <value>Invalid date</value>
  </data>
  <data name="ResponsiblePerson" xml:space="preserve">
    <value>Responsible person</value>
  </data>
  <data name="Number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="TestingCardChangeRequest" xml:space="preserve">
    <value>Testing card change request</value>
  </data>
</root>